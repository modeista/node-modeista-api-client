// Generated by CoffeeScript 1.4.0
(function() {
  var StyleEventCommentMethods,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  module.exports = StyleEventCommentMethods = (function() {

    function StyleEventCommentMethods(apiClient) {
      this.apiClient = apiClient;
      this.post = __bind(this.post, this);

      this.all = __bind(this.all, this);

      if (!this.apiClient) {
        throw new Error("apiClient parameter is required");
      }
    }

    StyleEventCommentMethods.prototype.all = function(styleEventId, options, cb) {
      if (options == null) {
        options = {};
      }
      if (cb == null) {
        cb = function() {};
      }
      if (!styleEventId) {
        return cb(new Error("Parameter styleEventId required."));
      }
      return this.apiClient.get("/style-events/:styleEventId/comments", options.params, options.actAsActorId, cb);
    };

    StyleEventCommentMethods.prototype.post = function(styleEventId, data, options, cb) {
      if (data == null) {
        data = {};
      }
      if (options == null) {
        options = {};
      }
      if (cb == null) {
        cb = function() {};
      }
      if (!styleEventId) {
        return cb(new Error("Parameter styleEventId required."));
      }
      if (!options.actAsActorId) {
        return cb(new Error("Parameter options.actAsActorId required."));
      }
      return this.apiClient.post("/style-events/:styleEventId/comments", data, options.actAsActorId, cb);
    };

    return StyleEventCommentMethods;

  })();

}).call(this);
